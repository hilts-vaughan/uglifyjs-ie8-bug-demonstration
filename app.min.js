if (typeof Object.create !== "function") {
    Object.create = function(e, t) {
        if (typeof e !== "object" && typeof e !== "function") {
            throw new TypeError("Object prototype may only be an Object: " + e);
        } else if (e === null) {
            throw new Error("This browser's implementation of Object.create is a shim and doesn't support 'null' as the first argument.");
        }
        if (typeof t != "undefined") {
            throw new Error("This browser's implementation of Object.create is a shim and doesn't support a second argument.");
        }
        function n() {}
        n.prototype = e;
        return new n();
    };
}

"use strict";

function _inheritsLoose(e, t) {
    e.prototype = Object.create(t.prototype);
    e.prototype.constructor = e;
    e.__proto__ = t;
}

var Backbone = function() {
    function e() {}
    var t = e.prototype;
    t.forge = function n() {
        alert("forged");
    };
    return e;
}();

var define = function e(t, n) {
    n(function() {
        return Backbone;
    });
};

define("backbone", function(e) {
    return Backbone;
});

define("scrollable", function(e) {
    var t = e("Backbone");
    var n = function(e) {
        _inheritsLoose(t, e);
        function t() {
            return e.apply(this, arguments) || this;
        }
        var n = t.prototype;
        n.events = function o() {
            var o = {};
            this.forge();
            return o;
        };
        return t;
    }(t);
    var o = new n();
    o.events();
    return n;
});
